{"version":3,"sources":["components/DrumMachine.jsx","index.js"],"names":["audios","keyChar","SoundButton","props","className","onClick","id","description","value","src","DrumMachine","state","power","volume","displayText","handleClick","bind","getDescription","handleVolume","handlePower","document","addEventListener","e","indexOf","key","toUpperCase","map","item","getElementById","load","removeEventListener","i","audiosSplited","split","length","match","this","audio","currentTime","play","button","style","transform","backgroundColor","setTimeout","setState","event","target","renderSoundButton","htmlFor","type","onChange","checked","min","max","React","Component","MyApp","ReactDOM","render"],"mappings":"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","file":"static/js/main.0800142c.chunk.js","sourcesContent":["\nimport React from 'react';\n\nconst audios=[\"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/Kawai%20R50/20[kb]ETOM_H.wav.mp3\",\"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/Kawai%20R50/31[kb]ETOM_L.wav.mp3\",\"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/Kawai%20R50/22[kb]ETOM_M.wav.mp3\",\"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/Kawai%20R50/20[kb]BASSELEC.wav.mp3\",\"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/Kawai%20R50/35[kb]BASSFNK1.wav.mp3\",\"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/Kawai%20R50/22[kb]BASSFNK2.wav.mp3\",\"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/Kawai%20R50/14[kb]BD1_ELEC.wav.mp3\",\"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/Kawai%20R50/29[kb]BD2_REV.wav.mp3\",\"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/Kawai%20R50/15[kb]BD3_ACOU.wav.mp3\"];\n\nconst keyChar=[\"Q\",\"W\",\"E\",\"A\",\"S\",\"D\",\"Z\",\"X\",\"C\"];\n\n\nfunction SoundButton(props){\n  return(\n    <button\n      className=\"drum-pad\"\n      onClick={props.onClick}\n      id={props.description}>{keyChar[props.value]}\n      <audio className=\"clip\" src={audios[props.value]} id={keyChar[props.value]}>\n      </audio>\n    </button>\n  );\n\n}\n\n\n\n\nclass DrumMachine extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      power:true,\n      volume:0.3,\n      displayText:\"@fotsme\"\n    }\n    this.handleClick=this.handleClick.bind(this);\n    this.getDescription=this.getDescription.bind(this);\n    this.handleVolume=this.handleVolume.bind(this);\n    this.handlePower=this.handlePower.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown',(e)=>this.handleClick(keyChar.indexOf(e.key.toUpperCase())));\n    keyChar.map(item=>document.getElementById(item).load());\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keydown',(e)=>this.handleClick(keyChar.indexOf(e.key.toUpperCase())));\n  }\n\n\n  getDescription(i){\n    let audiosSplited=audios[i].split(\"/\");\n    let wantedString = audiosSplited[audiosSplited.length-1].match(/\\w\\w\\w\\w+/);\n    return wantedString[0];\n  }\n\n  renderSoundButton(i){\n    return(\n      <SoundButton onClick={()=>this.handleClick(i)} value={i} description={this.getDescription(i)}/>\n    );\n  }\n\n  handleClick(i){\n    if (this.state.power && i!==-1){\n      let audio = document.getElementById(keyChar[i]);\n      audio.volume=this.state.volume;\n      audio.currentTime=0;\n      audio.play();\n      let button = document.getElementById(this.getDescription(i));\n      button.style.transform=\"translateY(4px)\";\n      button.style.backgroundColor=\"#f5c444\";\n      setTimeout(function(){\n        button.style.transform=\"translateY(0px)\";\n        button.style.backgroundColor=\"#f7e018\";\n      },40);\n      this.setState({\n        displayText:this.getDescription(i)\n      })\n    }\n  }\n\n  handleVolume(event){\n    this.setState({\n      volume:event.target.value/100,\n      displayText:\"Volume: \"+event.target.value\n    })\n  }\n\n  handlePower(){\n    this.setState({\n      power:!this.state.power\n    })\n  }\n\n  render(){\n    return(\n      <div id=\"drum-machine\">\n        <div id=\"pads-container\">\n          {this.renderSoundButton(0)}\n          {this.renderSoundButton(1)}\n          {this.renderSoundButton(2)}\n          {this.renderSoundButton(3)}\n          {this.renderSoundButton(4)}\n          {this.renderSoundButton(5)}\n          {this.renderSoundButton(6)}\n          {this.renderSoundButton(7)}\n          {this.renderSoundButton(8)}\n        </div>\n        <section id=\"configuration\">\n          <div id=\"power-container\">\n            <p><label htmlFor=\"power\">Power</label></p>\n            <label className=\"switch\">\n              <input type=\"checkbox\" id=\"power\" onChange={this.handlePower} checked={this.state.power}></input>\n              <span className=\"slider\"></span>\n            </label>\n          </div>\n          <div id=\"display-container\">\n            <p id=\"display\">{this.state.displayText}\n            </p>\n          </div>\n          <div id=\"volume-container\">\n            <p><label htmlFor=\"volume\">Volume</label></p>\n            <input className=\"volume-slider\" id=\"volume\" value={this.state.volume*100} type=\"range\" min=\"0\" max=\"100\" onChange={this.handleVolume}></input>\n          </div>\n          <div id=\"set\">\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default DrumMachine;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DrumMachine from './components/DrumMachine';\n\nclass MyApp extends React.Component{\n\n\trender(){\n\t\treturn(\n\t\t\t<div id=\"myApp\">\n\t\t\t\t<DrumMachine />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nReactDOM.render(<MyApp />,document.getElementById(\"root\"));\n"],"sourceRoot":""}